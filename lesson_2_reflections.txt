What happens when you initialize a repository? Why do you need to do it?
It creates hidden meta-data folder in the folder. I need it for making snapshots of my project via git commit command that will make git track the file revisions.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
User always edits files present in the working directory. Staging area snapsshots the files in preparation for versioning. A file has to be added to staging area from the working directore before it can be committed to the repository.

How can you use the staging area to make sure you have one commit per logical
change?
By adding all the modified files that represent a logical change to the stating area using git add and followed immeditely with a git commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
When you want to try new variations of a feature on an experimental basis so that such a variation can be tested independently without affecting the master or main branch. Branching can also be done at the time of releasing a new version of the application to allow developers to continue working towards the next version on the master branch 

How do the diagrams help you visualize the branch structure?
They help trace the parent path from a commit at, say, the tip of a branch. This way we can identify if there are any unreachable commits.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
The commits of the second branch get included in the current branch. The diagram shows the parent path for the two branches starting from the commit resulting from the merge all the way back to the most recent commit just before the branch.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
